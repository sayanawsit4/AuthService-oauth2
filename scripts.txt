/*CREATE SCHEMA viomeauth2;


CREATE TABLE viomeauth2.customer(
    id BIGINT PRIMARY KEY     NOT NULL,
    firstname VARCHAR(20),
    lastname VARCHAR(20)
);


CREATE TABLE viomeauth2.users (
    user_id BIGINT PRIMARY KEY ,
    username VARCHAR(128) UNIQUE,
    password VARCHAR(256),
    enabled BOOLEAN
);

INSERT INTO viomeauth2.users (user_id, username, password, enabled) VALUES 
	('1', 'peter@example.com', '$2a$10$D4OLKI6yy68crm.3imC9X.P2xqKHs5TloWUcr6z5XdOqnTrAK84ri', true),
	('2', 'john@example.com', '$2a$10$D4OLKI6yy68crm.3imC9X.P2xqKHs5TloWUcr6z5XdOqnTrAK84ri', true),
	('3', 'katie@example.com', '$2a$10$D4OLKI6yy68crm.3imC9X.P2xqKHs5TloWUcr6z5XdOqnTrAK84ri', true);
	
CREATE TABLE viomeauth2.user (
  username VARCHAR(50) NOT NULL PRIMARY KEY,
  email VARCHAR(50),
  password VARCHAR(500),
 activated BOOLEAN DEFAULT FALSE,

);	

select * from "user";
	
CREATE TABLE viomeauth2.	 (
  name VARCHAR(50) NOT NULL PRIMARY KEY
);

CREATE TABLE viomeauth2.user_authority (
    username VARCHAR(50) NOT NULL,
    authority VARCHAR(50) NOT NULL,
    FOREIGN KEY (username) REFERENCES viomeauth2."user" (username),
    FOREIGN KEY (authority) REFERENCES viomeauth2.authority ("name")
);

drop table viomeauth2.user_authority ;

alter table viomeauth2.user_authority add constraint  FOREIGN KEY (username) references viomeauth2."user" 

alter table user_authority add constraint FKeh9b2lkkmmj4rvnv2q1y2furc foreign key (username) references viomeauth2."user" 

INSERT INTO "user" (username,email, password, activated) VALUES ('piomin', 'piotr.minkowski@gmail.com', '15eefd099f840a5d278544c8eb22d6beee6b1c4725fee0184128696615b353a2', true);
INSERT INTO authority (name) VALUES ('ROLE_USER');
INSERT INTO authority (name) VALUES ('ROLE_ADMIN');

INSERT INTO user_authority (username,authority) VALUES ('piomin', 'ROLE_USER');
INSERT INTO user_authority (username,authority) VALUES ('piomin', 'ROLE_ADMIN');

alter table user_authority add constraint FKeh9b2lkkmmj4rvnv2q1y2furc foreign key (username) references user

alter table  "user" add column

INSERT INTO user_authority (username,authority) VALUES ('piomin', 'ROLE_USER');
INSERT INTO user_authority (username,authority) VALUES ('piomin', 'ROLE_ADMIN');	

drop table user_authority;

CREATE TABLE viomeauth2.user_authority (
    username VARCHAR(50) NOT NULL,
    authority VARCHAR(50) NOT NULL,
    FOREIGN KEY (username) REFERENCES viomeauth2."user" ("username"),
    FOREIGN KEY (authority) REFERENCES viomeauth2."authority" ("name")
);

create table oauth_client_token (
  token_id VARCHAR(255),
  token bytea, 
  authentication_id VARCHAR(255),
  user_name VARCHAR(255),
  client_id VARCHAR(255)
);

CREATE TABLE oauth_client_details (
  client_id VARCHAR(255),
  resource_ids VARCHAR(255),
  client_secret VARCHAR(255),
  "scope" VARCHAR(255),
  authorized_grant_types VARCHAR(255),
  web_server_redirect_uri VARCHAR(255),
  authorities VARCHAR(255),
  access_token_validity INTEGER,
  refresh_token_validity INTEGER,
  additional_information VARCHAR(255),
  autoapprove VARCHAR(255)
);

INSERT INTO oauth_client_details VALUES('authserver','', 'passwordforauthserver', 'read,write,myscope', 'client_credentials,authorization_code,implicit', 'http://localhost:8080/login/oauth2/code/authserver', 'ROLE_ADMIN', 7200, 0, NULL, 'true');

INSERT INTO oauth_client_details VALUES('authserver','', 'passwordforauthserver', 'read,write,myscope', 'client_credentials,authorization_code,implicit', 'http://localhost:8080/login/oauth2/code', 'ROLE_ADMIN', 7200, 0, NULL, 'true');


create table oauth_access_token (
  token_id VARCHAR(255),
  token bytea,
  authentication_id VARCHAR(255),
  user_name VARCHAR(255),
  client_id VARCHAR(255),
  authentication bytea,
  refresh_token VARCHAR(255)
);

create table oauth_refresh_token(
  token_id VARCHAR(255),
  token bytea,
  authentication bytea
);


create table access_audit(
  audit_rec_id BIGINT,
  email VARCHAR(255)
);

delete from "user" where email='utu@utut.com';



drop table access_audit;

INSERT INTO oauth_client_details VALUES('curl_client','product_api', '$2a$10$BurTWIy5NTF9GJJH4magz.9Bd4bBurWYG8tmXxeQh1vs7r/wnCFG2', 'read,write', 'client_credentials', 'http://127.0.0.1', 'ROLE_PRODUCT_ADMIN', 10, 0, NULL, 'true');

create table oauth_approvals (
    userId VARCHAR(255),
    clientId VARCHAR(255),
    scope VARCHAR(255),
    status VARCHAR(10),
    expiresAt timestamp,
    lastModifiedAt timestamp
);

create table oauth_code (
  code VARCHAR(255), authentication BYTEA
);

delete from oauth_access_token;

//select lo_get(token) from  oauth_access_token;


update oauth_client_details set scope='myscope' where client_id='authserver';

update oauth_client_details set scope='read,write,myscope,password' where client_id='authserver';

update oauth_client_details set authorized_grant_types='client_credentials,authorization_code,implicit,password' where client_id='authserver';

update oauth_client_details set access_token_validity=null where client_id='authserver';

delete from oauth_access_token;




CREATE TABLE SPRING_SESSION (
SESSION_ID CHAR(36) NOT NULL,
CREATION_TIME BIGINT NOT NULL,
LAST_ACCESS_TIME BIGINT NOT NULL,
MAX_INACTIVE_INTERVAL INT NOT NULL,
EXPIRY_TIME BIGINT ,
PRINCIPAL_NAME VARCHAR(100),
CONSTRAINT SPRING_SESSION_PK PRIMARY KEY (SESSION_ID)
);


CREATE UNIQUE INDEX SPRING_SESSION_IX1 ON SPRING_SESSION (SESSION_ID);


DROP TABLE SPRING_SESSION_ATTRIBUTES;

DROP TABLE SPRING_SESSION;

DELETE from oauth_client_details;

CREATE TABLE SPRING_SESSION_ATTRIBUTES (
SESSION_ID CHAR(36) NOT NULL,
ATTRIBUTE_NAME VARCHAR(200) NOT NULL,
ATTRIBUTE_BYTES bytea NOT NULL,
CONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_ID, ATTRIBUTE_NAME),
CONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_ID) REFERENCES SPRING_SESSION(SESSION_ID) ON DELETE CASCADE
);

INSERT INTO oauth_client_details VALUES('curl_client','product_api', '$2a$10$BurTWIy5NTF9GJJH4magz.9Bd4bBurWYG8tmXxeQh1vs7r/wnCFG2', 'read,write', 'client_credentials', 'http://127.0.0.1', 'ROLE_PRODUCT_ADMIN', 10, 0, NULL, 'true');
INSERT INTO "user" (username,email, password, activated) VALUES ('sayan', 'sayan.roy@gmail.com', '15eefd099f840a5d278544c8eb22d6beee6b1c4725fee0184128696615b353a2', true);
INSERT INTO user_authority (username,authority) VALUES ('sayan', 'ROLE_USER');*/

alter table "user" add column user_id BIGINT;

alter table "user" add column firstname  varchar (255),add column lastname  varchar (255);
alter table "user" add column lastname  varchar (255);


alter table "user" drop column user_id;
alter table "user" alter column email type varchar (255) UNIQUE;

ALTER TABLE "user"  ADD CONSTRAINT constraint_name UNIQUE (email);
ALTER TABLE "user"  alter column user_id type  BIGINT;

ALTER TABLE "user" ALTER COLUMN user_id TYPE integer;

ALTER TABLE "user" ADD COLUMN ID SERIAL PRIMARY KEY;

ALTER TABLE  "user"  DROP CONSTRAINT user_pkey;



CREATE TABLE SPRING_SESSION (
SESSION_ID CHAR(36) NOT NULL,
CREATION_TIME BIGINT NOT NULL,
LAST_ACCESS_TIME BIGINT NOT NULL,
MAX_INACTIVE_INTERVAL INT NOT NULL,
EXPIRY_TIME BIGINT ,
PRINCIPAL_NAME VARCHAR(100),
CONSTRAINT SPRING_SESSION_PK PRIMARY KEY (SESSION_ID)
);

CREATE UNIQUE INDEX SPRING_SESSION_IX1 ON SPRING_SESSION (SESSION_ID);

CREATE TABLE SPRING_SESSION_ATTRIBUTES (
SESSION_ID CHAR(36) NOT NULL,
ATTRIBUTE_NAME VARCHAR(200) NOT NULL,
ATTRIBUTE_BYTES bytea NOT NULL,
CONSTRAINT SPRING_SESSION_ATTRIBUTES_PK PRIMARY KEY (SESSION_ID, ATTRIBUTE_NAME),
CONSTRAINT SPRING_SESSION_ATTRIBUTES_FK FOREIGN KEY (SESSION_ID) REFERENCES SPRING_SESSION(SESSION_ID) ON DELETE CASCADE
);


alter table "user" add column firstname  varchar (255),add column lastname  varchar (255);

alter table "user" add column providerid  varchar (255),add column phone  BIGINT;


CREATE TABLE contacts (
    contact_id uuid DEFAULT uuid_generate_v4 (),
    first_name VARCHAR NOT NULL,
    last_name VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    phone VARCHAR,
    PRIMARY KEY (contact_id)
)


ALTER TABLE  "user"  DROP CONSTRAINT user_pkey;

ALTER TABLE  "user"  DROP CONSTRAINT user_pkey;
ALTER TABLE  "user_authority"  DROP CONSTRAINT user_authority_username_fkey;

delete  from "user";
delete from "authority";
delete from "user_authority";

//ALTER TABLE  "user"  DROP CONSTRAINT user_pkey CASCADE;
//ALTER TABLE  "user_authority"  DROP CONSTRAINT user_authority_username_fkey;

//DROP TABLE "user";

CREATE TABLE viomeauth2.user (
  user_id uuid  NOT NULL PRIMARY KEY,
  username VARCHAR(50),
  email VARCHAR(50),
  password VARCHAR(500),
  activated BOOLEAN DEFAULT FALSE,
  first_name varchar (255),
  last_name varchar (255),
  phone BIGINT,
  provider_id varcha(255) DEFAULT 'Viome'
  );


 alter table "user" add column firstname  varchar (255),add column lastname  varchar (255);

 alter table "user" add column providerid  varchar (255),add column phone  BIGINT;

DROP TABLE viomeauth2.user_authority;

CREATE TABLE viomeauth2.user_authority (
    email VARCHAR(50) NOT NULL,
    authority VARCHAR(50) NOT NULL,
    FOREIGN KEY (email) REFERENCES viomeauth2."user" ("email"),
    FOREIGN KEY (authority) REFERENCES viomeauth2.authority ("name")
);
 
 
 INSERT INTO "user" (user_id,username,email, password, activated) VALUES ('123','piomin', 'piotr.minkowski@gmail.com', '15eefd099f840a5d278544c8eb22d6beee6b1c4725fee0184128696615b353a2', true);

INSERT INTO user_authority (user_id,authority) VALUES ('123', 'ROLE_USER');
INSERT INTO user_authority (user_id,authority) VALUES ('123', 'ROLE_ADMIN');

alter table user_authority drop column email;


alter table "user" alter column email type varchar (255);
